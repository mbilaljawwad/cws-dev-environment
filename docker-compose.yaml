version: '3.8'

services:
  # Backend service with hot reloading
  backend:
    build:
      context: ./cws-backend
      dockerfile: dev.DockerFile
      target: development
    container_name: cws-backend-dev
    ports:
      - "9000:9000"
    volumes:
      # Mount source code for hot reloading
      - ./cws-backend:/app
      # Exclude node_modules and other build artifacts
      - ./cws-backend/tmp:/app/tmp
    environment:
      - APP_ENV=development
      - CGO_ENABLED=0
      - GOOS=linux
      - DB_HOST=database
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=cwsdb
    depends_on:
      - database
    # Restart policy for development
    restart: unless-stopped
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  database:
    image: postgres:17-alpine
    container_name: cws-database
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=cwsdb
    volumes:  
     - ./cws-backend/postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  postgres_data:
      


  # Frontend service (when ready)
  # frontend:
  #   build:
  #     context: ./cws-frontend
  #     dockerfile: Dockerfile.dev
  #   container_name: cws-frontend-dev
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - ./cws-frontend:/app:cached
  #     - /app/node_modules
  #   environment:
  #     - NODE_ENV=development
  #   networks:
  #     - cws-network
  #   depends_on:
  #     - backend
